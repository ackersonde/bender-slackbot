kind: Service
apiVersion: v1
metadata:
  name: bender
spec:
  ports:
    - name: bender
      port: 3000
      protocol: TCP
  selector:
    app: bender

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: bender
  labels:
    app: bender
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bender
  revisionHistoryLimit: 5
  template:
    metadata:
      labels:
        app: bender
    spec:
      restartPolicy: Always
      imagePullSecrets:
        - name: dockerhub
      nodeSelector:
        traefik: proxy
      containers:
        - name: bender
          image: danackerson/slackbot:vg{{GITHUB_RUN_ID}}
          ports:
            - name: bender
              containerPort: 3000
          envFrom:
          - secretRef:
              name: bender-env-secrets
          volumeMounts:
          # https://www.jannikarndt.de/blog/2018/03/ssh_key_as_kubernetes_secret/
          - name: ssh-key-volume
            readOnly: true
            mountPath: "/root/.ssh/id_ed25519"
            subPath: id_ed25519
          - name: ssh-cacert-volume
            mountPath: "/root/.ssh/id_ed25519-cert.pub"
            subPath: id_ed25519-cert.pub
          - name: scp-pops4xl-key-volume
            readOnly: true
            mountPath: "/root/.ssh/id_rsa_pix4x"
            subPath: id_rsa_pix4x
      volumes:
      - name: ssh-key-volume
        secret:
          secretName: server-deploy-key-secret
          defaultMode: 256
      - name: ssh-cacert-volume
        secret:
          secretName: server-cacert-secret
          defaultMode: 256
      - name: scp-pops4xl-key-volume
        secret:
          secretName: scp-pops4xl-key-secret
          defaultMode: 256

---
apiVersion: v1
kind: Secret
metadata:
  name: bender-env-secrets
data:
  GITHUB_RUN_ID: {{GITHUB_RUN_ID_B64}}
  CTX_PLEX_TOKEN: {{CTX_PLEX_TOKEN_B64}}
  CTX_DIGITALOCEAN_TOKEN: {{CTX_DIGITALOCEAN_TOKEN_B64}}
  CTX_JOIN_API_KEY: {{CTX_JOIN_API_KEY_B64}}
  CTX_DROPBOX_ACCESS_TOKEN: {{CTX_DROPBOX_ACCESS_TOKEN_B64}}
  CTX_ETHERSCAN_API_KEY: {{CTX_ETHERSCAN_API_KEY_B64}}
  CTX_ETHEREUM_ADDRESS_METAMASK: {{CTX_ETHEREUM_ADDRESS_METAMASK_B64}}
  CTX_CURRENT_PGP_FINGERPRINT: {{CTX_CURRENT_PGP_FINGERPRINT_B64}}
  CTX_STELLAR_LUMENS_ADDRESS: {{CTX_STELLAR_LUMENS_ADDRESS_B64}}
  CTX_VPNC_GATEWAY: {{CTX_VPNC_GATEWAY_B64}}
  CTX_SLACK_CHANNEL: {{CTX_SLACK_CHANNEL_B64}}
  CTX_SLACK_NEW_API_TOKEN: {{CTX_SLACK_NEW_API_TOKEN_B64}}
  SLACK_EVENTSAPI_ENDPOINT: {{SLACK_EVENTSAPI_ENDPOINT_B64}}
  SLACK_VERIFICATION_TOKEN: {{SLACK_VERIFICATION_TOKEN_B64}}
  SLACK_SIGNING_SECRET: {{SLACK_SIGNING_SECRET_B64}}
  SLACK_BENDER_BOT_USERID: {{SLACK_BENDER_BOT_USERID_B64}}

---
apiVersion: v1
kind: Secret
metadata:
  name: server-deploy-key-secret
data:
  id_ed25519: {{CTX_SERVER_DEPLOY_SECRET_B64}}

---
apiVersion: v1
kind: Secret
metadata:
  name: server-cacert-secret
data:
  id_ed25519-cert.pub: {{CTX_SERVER_DEPLOY_CACERT_B64}}

---
# https://superuser.com/questions/120796/how-to-encode-base64-via-command-line#comment280484_120815
apiVersion: v1
kind: Secret
metadata:
  name: scp-pops4xl-key-secret
data:
  id_rsa_pix4x: {{CTX_POPS4XL_SCP_KEY_SECRET_B64}}

---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: bender-ingress
  namespace: default
spec:
  entryPoints:
    - web
    - secure
  routes:
  - match: Host(`{{BENDER_HOSTNAME}}`)
    middlewares:
    - name: tls-redirect
    - name: careful-ratelimit
    kind: Rule
    services:
    - name: bender
      port: 3000
