version: 2
executorType: docker
containerInfo:
  - image: golang:1.7
stages:
  build:
    workDir: /go/src/github.com/danackerson/bender-slackbot
    steps:
      - type: checkout
      # Build & Test: https://discuss.circleci.com/t/sample-rails-app-running-docker-in-a-container/9066
      - type: shell
        name: "Install Docker Engine, JUnit, Setup Test Path"
        command: |
          curl -L -o /tmp/docker.tgz https://get.docker.com/builds/Linux/x86_64/docker-1.12.5.tgz
          tar -xz -C /tmp -f /tmp/docker.tgz
          mv /tmp/docker/docker* /usr/bin/

          curl -L "https://github.com/docker/compose/releases/download/1.9.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose
          chmod +x /usr/bin/docker-compose

          go get github.com/jstemmer/go-junit-report
          mkdir -p /tmp/test-results

      - type: shell
        name: "Fetch dependencies and build bender app"
        command: |
          set -eu
          echo "GOPATH: $GOPATH"
          rm -Rf /go/src/github.com/danackerson/vendor
          go get -t -d -v ./...
          rm -Rf /go/src/github.com/danackerson/vendor
          env GOOS=linux GOARCH=amd64 go build bender.go

      - type: setup-docker-engine
      - type: shell
        name: "Build, run and test docker image"
        command: |
          docker build -t danackerson/bender:vc$CIRCLE_BUILD_NUM --build-arg vpnc_gateway=$VPNC_GATEWAY --build-arg vpnc_id=$VPNC_ID --build-arg vpnc_secret=$VPNC_SECRET --build-arg vpnc_username=$VPNC_USERNAME --build-arg vpnc_password=$VPNC_PASSWORD .
          docker run -d -e slackToken=$(echo $slackTokenEncoded | base64 --decode) -e raspberryPIIP=$raspberryPIIP -e slackReportChannel=$slackReportChannel -e piUser=$piUser -e piPass=$piPass -e digitalOceanToken=$digitalOceanToken --name bender danackerson/bender:vc$CIRCLE_BUILD_NUM
          docker logs bender | grep "Presence:active User:U2NQSPHHD"

      - type: add-ssh-keys
        name: "Load key"
        fingerprints:
          - "93:c4:61:21:a6:82:d8:6d:4f:73:11:79:37:23:83:07"
      - type: shell
        name: Start ssh-agent
        command: |
          ssh-agent -s > ~/.ssh_agent_conf
          source ~/.ssh_agent_conf
          for _k in $(ls ${HOME}/.ssh/id_*); do
            ssh-add ${_k} || true
          done

      - type: deploy
        name: "Upload to DockerHub, deploy container to Digital Ocean Droplet & launch"
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push danackerson/bender:vc$CIRCLE_BUILD_NUM
          source ~/.ssh_agent_conf
          ssh -o "StrictHostKeyChecking no" ackersond@deploy.ackerson.de docker login -u $DOCKER_USER -p $DOCKER_PASS
          ssh -o "StrictHostKeyChecking no" ackersond@deploy.ackerson.de docker pull danackerson/bender:vc$CIRCLE_BUILD_NUM
          ssh -o "StrictHostKeyChecking no" ackersond@deploy.ackerson.de docker rm -f bender; true
          ssh -o "StrictHostKeyChecking no" ackersond@deploy.ackerson.de docker run -d --restart=always --privileged=true -e raspberryPIIP=$raspberryPIIP -e slackReportChannel=$slackReportChannel -e piUser=$piUser -e piPass=$piPass -e digitalOceanToken=$digitalOceanToken -e CIRCLE_BUILD_NUM=$CIRCLE_BUILD_NUM -e slackToken=$(echo $slackTokenEncoded | base64 --decode) --name bender danackerson/bender:vc$CIRCLE_BUILD_NUM

# not all Env vars are created equal - some have ':' or '{}' or <shudder> '\/'s
# in this case we base64 encode the parameter: `base64 <<< [string in question]`
# taking the result and pasting it into the environment variable of this CircleCI project
# above is an example how to decode this on the fly (e.g. slackToken)
# what is this .go_workspace?!? rm -Rf /home/ubuntu/.go_workspace/src/$IMPORT_PATH/vendor
